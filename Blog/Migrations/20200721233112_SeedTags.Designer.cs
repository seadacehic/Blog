// <auto-generated />
using System;
using Blog.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Blog.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20200721233112_SeedTags")]
    partial class SeedTags
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Blog.Models.Posts", b =>
                {
                    b.Property<string>("BlogSlug")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Body");

                    b.Property<DateTime>("CreatedAtDate");

                    b.Property<string>("Description");

                    b.Property<int>("TagsId");

                    b.Property<string>("Title");

                    b.Property<DateTime>("UpdatedAtDate");

                    b.HasKey("BlogSlug");

                    b.HasIndex("TagsId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Blog.Models.Tags", b =>
                {
                    b.Property<int>("TagsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllowedBarsList");

                    b.HasKey("TagsId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagsId = 1,
                            AllowedBarsList = "iOS, AR"
                        });
                });

            modelBuilder.Entity("Blog.Models.Posts", b =>
                {
                    b.HasOne("Blog.Models.Tags", "Tags")
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
